
package com.example;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.ws.Action;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.Response;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "HelloWorldServer", targetNamespace = "http://example.com/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
public interface HelloWorldServer {


    /**
     * 
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<java.lang.String>
     */
    @WebMethod(operationName = "sayHello")
    public Response<String> sayHelloAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "sayHello")
    public Future<?> sayHelloAsync(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "asyncHandler", partName = "asyncHandler")
        AsyncHandler<String> asyncHandler);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://example.com/HelloWorldServer/sayHelloRequest", output = "http://example.com/HelloWorldServer/sayHelloResponse")
    public String sayHello(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

}
